// <auto-generated />
using System;
using GBCSporting_Team_Amigos.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GBCSporting_Team_Amigos.Migrations
{
    [DbContext(typeof(Assignment1Context))]
    [Migration("20220225232949_Assignment1")]
    partial class Assignment1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GBCSporting_Team_Amigos.Models.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryId"), 1L, 1);

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryId");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryId = 1,
                            CountryName = "Canada"
                        },
                        new
                        {
                            CountryId = 2,
                            CountryName = "Iran"
                        },
                        new
                        {
                            CountryId = 3,
                            CountryName = "Turkey"
                        },
                        new
                        {
                            CountryId = 4,
                            CountryName = "France"
                        },
                        new
                        {
                            CountryId = 5,
                            CountryName = "The United States"
                        },
                        new
                        {
                            CountryId = 6,
                            CountryName = "Spain"
                        },
                        new
                        {
                            CountryId = 7,
                            CountryName = "Portugal"
                        },
                        new
                        {
                            CountryId = 8,
                            CountryName = "The United Kingdom"
                        },
                        new
                        {
                            CountryId = 9,
                            CountryName = "Greece"
                        },
                        new
                        {
                            CountryId = 10,
                            CountryName = "Colombia"
                        });
                });

            modelBuilder.Entity("GBCSporting_Team_Amigos.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Address = "Bourret Ave",
                            City = "Montreal",
                            CountryId = 1,
                            Email = "Safa.Aru@georgebrown.ca",
                            Firstname = "Safa",
                            Lastname = "Aru",
                            Phone = "647-834-8928",
                            PostalCode = "H3W 1L4",
                            State = "Quebec"
                        },
                        new
                        {
                            CustomerId = 2,
                            Address = "446 Gilmour St",
                            City = "Ottawa",
                            CountryId = 1,
                            Email = "Ebrahim.Safdari@georgebrown.ca",
                            Firstname = "Ebi",
                            Lastname = "Safdari",
                            Phone = "6476-789-2035",
                            PostalCode = "KP2 0R8",
                            State = "Otario"
                        },
                        new
                        {
                            CustomerId = 3,
                            Address = "565 Lawrence Ave",
                            City = "Toronto",
                            CountryId = 1,
                            Email = "Elham.Veisouei@georgebrown.ca",
                            Firstname = "Elham",
                            Lastname = "Veisouei",
                            Phone = "647-876-6989",
                            PostalCode = "M6A 1A5",
                            State = "Ontario"
                        },
                        new
                        {
                            CustomerId = 4,
                            Address = "1190 W 12th Ave",
                            City = "Vancouver",
                            CountryId = 1,
                            Email = "Hakan.Inel@georgebrown.ca",
                            Firstname = "Hakan",
                            Lastname = "Inel",
                            Phone = "416-746-8900",
                            PostalCode = "V6H 1L6",
                            State = "British Columbia"
                        });
                });

            modelBuilder.Entity("GBCSporting_Team_Amigos.Models.Incident", b =>
                {
                    b.Property<int>("IncidentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IncidentId"), 1L, 1);

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomerId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OpenDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProductId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("TechnicianId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IncidentId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.HasIndex("TechnicianId");

                    b.ToTable("Incidents");

                    b.HasData(
                        new
                        {
                            IncidentId = 2221,
                            CloseDate = new DateTime(2018, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 1,
                            Description = "Program fails with error, unable to launch the program.",
                            OpenDate = new DateTime(2018, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 1111,
                            TechnicianId = 3333,
                            Title = "Error launching program"
                        },
                        new
                        {
                            IncidentId = 2222,
                            CloseDate = new DateTime(2019, 4, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 2,
                            Description = "Program fails with error, unable to open import data.",
                            OpenDate = new DateTime(2019, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 1112,
                            TechnicianId = 3334,
                            Title = "Error importing data"
                        },
                        new
                        {
                            IncidentId = 2223,
                            CloseDate = new DateTime(2020, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 3,
                            Description = "Program fails with error code 510, unable to open database.",
                            OpenDate = new DateTime(2020, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 1113,
                            TechnicianId = 3335,
                            Title = "Could not install"
                        },
                        new
                        {
                            IncidentId = 2224,
                            CloseDate = new DateTime(2021, 6, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 4,
                            Description = "Program fails with error code 510, unable to open database.",
                            OpenDate = new DateTime(2021, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 1114,
                            TechnicianId = 3336,
                            Title = "Could not install"
                        });
                });

            modelBuilder.Entity("GBCSporting_Team_Amigos.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1111,
                            Code = "DFAFT10",
                            Name = "Draft Manager 1.0",
                            Price = 4.5,
                            ReleaseDate = new DateTime(2018, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ProductId = 1112,
                            Code = "TEAM10",
                            Name = "Team Manager 1.0",
                            Price = 4.9900000000000002,
                            ReleaseDate = new DateTime(2019, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ProductId = 1113,
                            Code = "LEAG10",
                            Name = "League Scheduler Deluxe 1.0",
                            Price = 7.9900000000000002,
                            ReleaseDate = new DateTime(2019, 2, 16, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ProductId = 1114,
                            Code = "DRAFT20",
                            Name = "Draft Manager 2.0",
                            Price = 5.9900000000000002,
                            ReleaseDate = new DateTime(2020, 2, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("GBCSporting_Team_Amigos.Models.Registration", b =>
                {
                    b.Property<int>("RegistrationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RegistrationId"), 1L, 1);

                    b.Property<int?>("CustomerId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("RegistrationId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.ToTable("Registrations");

                    b.HasData(
                        new
                        {
                            RegistrationId = 1,
                            CustomerId = 1,
                            ProductId = 1111
                        },
                        new
                        {
                            RegistrationId = 2,
                            CustomerId = 2,
                            ProductId = 1112
                        },
                        new
                        {
                            RegistrationId = 3,
                            CustomerId = 3,
                            ProductId = 1113
                        },
                        new
                        {
                            RegistrationId = 4,
                            CustomerId = 4,
                            ProductId = 1114
                        });
                });

            modelBuilder.Entity("GBCSporting_Team_Amigos.Models.Technician", b =>
                {
                    b.Property<int>("TechnicianId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TechnicianId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TechnicianId");

                    b.ToTable("Technicians");

                    b.HasData(
                        new
                        {
                            TechnicianId = 3333,
                            Email = "Alison.Diaz@gmail.com",
                            Name = "Alison Diaz",
                            Phone = "243-768-9102"
                        },
                        new
                        {
                            TechnicianId = 3334,
                            Email = "Ali.Ahmad@gmail.com",
                            Name = "Ali Ahmad",
                            Phone = "468-990-1002"
                        },
                        new
                        {
                            TechnicianId = 3335,
                            Email = "Gina.Friori@gmail.com",
                            Name = "Gina Friori",
                            Phone = "567-356-3829"
                        },
                        new
                        {
                            TechnicianId = 3336,
                            Email = "Andrew.Wendt@gmail.com",
                            Name = "Andrew Wendt",
                            Phone = "467-389-2349"
                        });
                });

            modelBuilder.Entity("GBCSporting_Team_Amigos.Models.Incident", b =>
                {
                    b.HasOne("GBCSporting_Team_Amigos.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GBCSporting_Team_Amigos.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GBCSporting_Team_Amigos.Models.Technician", "Technician")
                        .WithMany()
                        .HasForeignKey("TechnicianId");

                    b.Navigation("Customer");

                    b.Navigation("Product");

                    b.Navigation("Technician");
                });

            modelBuilder.Entity("GBCSporting_Team_Amigos.Models.Registration", b =>
                {
                    b.HasOne("GBCSporting_Team_Amigos.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GBCSporting_Team_Amigos.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
